// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  username    String   @unique
  email       String   @unique
  description String?  @db.VarChar(500)
  password    String
  created_at  DateTime @default(now())
  type        UserType @default(MEMBER)
  notify      Boolean  @default(false)
  tabcoins    Int      @default(0)

  Post    Post[]
  Comment Comment[]
}

model Post {
  id          String   @id @default(uuid())
  title       String   @db.VarChar(255)
  description String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  creator_id  String
  tabcoins    Int      @default(1)
  font        String?

  Comment Comment[]
  creator User      @relation(fields: [creator_id], references: [id], onDelete: Cascade)
}

model Comment {
  id          String   @id @default(uuid())
  description String   @db.VarChar(500)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  tabcoins    Int      @default(1)
  post_id     String
  user_id     String
  comment_id  String?

  User       User      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  post       Post      @relation(fields: [post_id], references: [id], onDelete: Cascade)
  Comment    Comment?  @relation("Subcomment", fields: [comment_id], references: [id], onDelete: Cascade)
  Subcomment Comment[] @relation("Subcomment")
}

enum UserType {
  ADMIN
  MEMBER
}
